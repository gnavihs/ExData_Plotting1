install.packages("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
View(hw1_data)
hw1_data[1]
hw1_data[,1:2]
hw1_data[ ,1]
hw1_data[1:2 ,:]
hw1_data[1:2,]
dimensions(hw1_data)
dim(hw1_data)
x <- hw1_data
dim(x)
hw1_data[dim(x)]
y <- dim(x)
y
x[y[1]:y[1]-1, ]
x[y[1]-1:y[1], ]
x[y[1]-1, ]
x[y[1], ]
x[(y[1]-1):y[1], ]
x[47]
x[47, ]
bad <- is.na(x)
x[!bad]
bad <- is.na(x[, 1])
x[bad, 1]
w <- x[bad, 1]
dim(w)
w
length(w)
mean(x[,1])
mean(x[!bad , 1])
bad4 <- is.na(x[, 4])
bad2 <- is.na(x[, 2])
mean(x[!bad,1]>31 & x[!bad4,4]>90 & x[!bad2,2])
mean(x[!bad,1]>31 && x[!bad4,4]>90 && x[!bad2,2])
q <- x[x[ ,1]>31 & x[ ,4]>90 & x[!bad2,2]]
q <- x[x[ ,1]>31]
q <- x[ ,1]>31
q <- x[ ,1]>31 & x[ ,4]>90 & x[!bad2,2]
q
dim(q)
q <- x[ ,1]>31 & x[ ,4]>90 & x[!bad2,2]
q <- x[ ,1]>31 && x[ ,4]>90 && x[!bad2,2]
q
q
q <- x[ ,1]>31 & x[ ,4]>90 & x[!bad2,2]
q <- x[ ,1]>31
q <- q[ ,4]>90
q <- x[x[ ,1]>31]
q <- x[ ,1]>31
q
w <- x[q]
w <- x[q, 1]
w <- x[q, ]
q <- x[(x[ ,1]>31), ]
q <- x[(x[!bad,1]>31), ][(x[!bad4, 4]>90), ][(x[!bad2, 2]), ]
q
q <- x[(x[!bad,1]>31), ][(x[!bad4, 4]>90), ]
q
q <- x[(x[!bad,1]>31), ]
q
bad
q <- x[!bad,1]>31
length(q)
q <- x[!bad,1]
length(q)
q
q <- x[!bad,1]>31
q
class(q)
q <- x[(x[!bad,1]>31), ]
q
dim(q)
q <- x[(x[!bad,1] > 31), ]
dim(q)
q <- x[!bad,1]>31
w <- x[w,]
q
w <- x[w]
w <- x[w,]
w <- x[q,]
w
good < complete.cases(x[,1])
good <- complete.cases(x[,1])
good
q <- x[x[good, 1]>31, ]
q
q <- x[(x[good, 1]>31), ]
q
q <- x[good, 1]>31
q
q <- x[15, 1]>31
q
q <- x[14, 1]>31
q
q <- x[good, 1]>31
q
q <- x[, 1]>31
q
w <- x[q, ]
w
q <- x[, 1]>31
q
q <- x[good, ][, 1]>31
q
q <- x[, 1]>31
q
w <- is.na(q)
w
a <- x[!w, ]
a
a <- x[!w, ]>31
a
a <- x[(x[!w, ]>31),]
a
a <- x[(x[!w, ]>31),]
w
a <- x[(x[!w, 1]>31),]
a
clc
x
bad
x <- x[!bad,]
x
dim(x)
x <- hw1_data
dim(x)
bad
bad1 <- is.na(, 1)
bad1 <- is.na(x[, 1])
bad2 <- is.na(x[, 2])
bad4 <- is.na(x[, 4])
x <- hw1_data
x <- x[!bad1, ]
bad2 <- is.na(x[, 2])
x <- x[!bad2, ]
bad4 <- is.na(x[, 4])
x <- x[!bad4, ]
dim(x)
q <- x[(x[,1]>31), ]
dim(q)
q
q <- q[(q[,4]>90), ]
dim(q)
mean(,2)
mean(q[,2])
q <- x[(x[,5] == 6), ]
dim(q)
q <- hw1_data[(hw1_data[,5] == 6), ]
dim(q)
bad <- is.na(q[ , 4])
dim(q)
mean(q[,4])
q <- hw1_data[(hw1_data[,5] == 5), ]
max(q[,1])
bad <- is.na(q[ , 1])
q <- q[!bad, 1]
dim(q)
q <- hw1_data[(hw1_data[,5] == 5), ]
bad <- is.na(q[ , 1])
q <- q[q[!bad, 1], ]
dim(q)
max(q[,1])
q
x <- hw1_data
bad1 <- is.na(x[,1])
q <- x[!bad1, ]
w <- x[
sda
dasdasdsa
fg
sd
w <- q[(x[,5]==5),]
dim(w)
x <- hw1_data
bad1 <- is.na(x[,1])
q <- x[!bad1, ]
dim(q)
w <- q[(q[,5]==5), ]
dim(w)
max(w[,1])
x <- hw1_data
q <- x[(x[, 5] == 5),]
dim(q)
bad5 = is.na(q[, 1])
w <- q[!bad5, ]
dim(w)
max(q[,1])
max(w[,1])
q
x <-hw1_data
q <- x[(x[ ,5] ==6),]
dim(q)
bad <- is.na(q[, 4])
w <- q[!bad, ]
dim(w)
mean(w[, 4])
search()
install.packages("xml", lib="/home/shivang/R")
install.packages("XML", lib="/home/shivang/R")
sudo install.packages("XML")
install.packages("XML")
install.packages("XML", lib="/home/shivang/R")
install.packages("XML", lib="/home/shivang/R")
library(XML)
install.packages("dplyr")
search()
version
search()
with(airquality, plot(Wind, Ozone))
with(subset(airquality, Month == 5), points(Wind, Ozone, col ="blue"))
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "green"))
with(subset(airquality[Month==5, ], points(Wind, Ozone, col = "blue"))
with(subset(airquality[Month==5, ], points(Wind, Ozone, col = "blue"))
with(subset(airquality[airquality$Month==5, ], points(Wind, Ozone, col = "blue"))
with(subset(airquality[airquality$Month==5, ], points(Wind, Ozone, col = "blue"))
with(airquality, plot(Wind, Ozone))
model <- lm(Ozone ~ Wind, airquality)
abline(model, lwd =2)
model <- lm(Wind ~ Ozone, airquality)
abline(model, lwd =2)
par(mfrow = c(1,2))
with(airquality, plot(Wind, Ozone))
with(airquality, {plot(Wind, Ozone), plot(Solar.R, Ozone)})
with(airquality, {plot(Wind, Ozone); plot(Solar.R, Ozone)})
with(airquality, {plot(Wind, Ozone) plot(Solar.R, Ozone)})
with(airquality, {plot(Wind, Ozone); plot(Solar.R, Ozone)})
par(mfrow = c(1,2))
with(airquality, {plot(Wind, Ozone); plot(Solar.R, Ozone)})
with(airquality, {plot(Wind, Ozone); plot(Solar.R, Ozone); plot(Ozone, Ozone)})
with(airquality, {plot(Wind, Ozone); plot(Solar.R, Ozone)})
par(mfrow = c(1,2))
with(airquality, {plot(Wind, Ozone); plot(Solar.R, Ozone); plot(Ozone, Ozone)})
with(airquality, {plot(Wind, Ozone); plot(Solar.R, Ozone); plot(Solar.R, Wind)})
par(mfrow = c(1,2))
with(airquality, {plot(Wind, Ozone); plot(Solar.R, Ozone); plot(Solar.R, Wind)})
getwd()
source('~/workspace/Templates/plot1.R')
source('~/Downloads/DataScience/Course-4/ExData_Plotting1/plot1.R')
source('~/Downloads/DataScience/Course-4/ExData_Plotting1/plot1.R')
?read.table
source('~/Downloads/DataScience/Course-4/ExData_Plotting1/plot1.R')
source('~/Downloads/DataScience/Course-4/ExData_Plotting1/plot1.R')
